# /mnt/c/Users/samir/OneDrive - ISCTE-IUL/Ambiente de Trabalho/2º ano/2º Semestre/Programação para a Internet/nginx/nginx.conf

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Upstream para o seu Backend (onde está o Socket.IO e a criptografia)
    upstream backend-app-socketio {
        ip_hash; # Essencial para sticky sessions do Socket.IO
        server sc-python_app:8000; # Nome do serviço Docker Compose e porta INTERNA
    }

    # Upstream para o seu Frontend (onde estão os arquivos HTML, JS, CSS)
    upstream frontend-app-web {
        server sc-flask_frontend:8000; # Corrigido: Nome do serviço Docker Compose e porta INTERNA (8000 do Gunicorn do frontend)
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server_key_no_pass.pem;

        # Opcional: Configuração para mTLS do cliente com Nginx
        # ssl_client_certificate /etc/nginx/certs/server.crt; # CA que assinou os certificados dos clientes
        # ssl_verify_client on; # Exige certificado do cliente
        # ssl_verify_depth 2;

        # 1. Trata requisições para o Socket.IO (proxy para o Backend)
        location /socket.io/ {
            proxy_pass https://backend-app-socketio/socket.io/; # Encaminha para o backend com o caminho completo
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade"; # Crucial para WebSockets
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400; # Tempo limite para conexões WebSocket
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
        }

        # 2. Trata requisições para uploads de arquivos (proxy para o Backend)
        # O frontend chamará /api/uploads/nome_do_arquivo
        location /api/uploads/ {
            rewrite ^/api/uploads/(.*)$ /$1 break; # Remove /api/uploads/ do caminho para o backend
            proxy_pass https://backend-app-socketio/uploads/; # Encaminha para a rota /uploads/ do backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
        }
        
        # 3. Trata todas as outras requisições (proxy para o Frontend)
        # Isso incluirá /, /login, /static/css/, /static/js/ etc.
        location / {
            proxy_pass http://frontend-app-web; # Corrigido: Usar HTTP para o frontend se ele não estiver servindo HTTPS diretamente
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Não precisa de proxy_ssl_server_name e proxy_ssl_verify se for HTTP
        }
    }
}